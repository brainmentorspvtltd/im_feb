 var arr = [90,2 ,100,33,55,1,,2];
undefined
for(let i = 0;i<arr.length;i++){
console.log(arr[i]);
}
VM209:2 90
VM209:2 2
VM209:2 100
VM209:2 33
VM209:2 55
VM209:2 1
VM209:2 undefined
VM209:2 2
undefined
 var arr = [90,2 ,100,33,55,1,2];
undefined
arr.forEach(element=>console.log(element));
VM319:1 90
VM319:1 2
VM319:1 100
VM319:1 33
VM319:1 55
VM319:1 1
VM319:1 2
undefined
arr.forEach((element,index)=>console.log(index, element));
VM370:1 0 90
VM370:1 1 2
VM370:1 2 100
VM370:1 3 33
VM370:1 4 55
VM370:1 5 1
VM370:1 6 2
undefined
arr.forEach((element,index,a)=>console.log(index, element,a));
VM396:1 0 90 (7) [90, 2, 100, 33, 55, 1, 2]
VM396:1 1 2 (7) [90, 2, 100, 33, 55, 1, 2]
VM396:1 2 100 (7) [90, 2, 100, 33, 55, 1, 2]
VM396:1 3 33 (7) [90, 2, 100, 33, 55, 1, 2]
VM396:1 4 55 (7) [90, 2, 100, 33, 55, 1, 2]
VM396:1 5 1 (7) [90, 2, 100, 33, 55, 1, 2]
VM396:1 6 2 (7) [90, 2, 100, 33, 55, 1, 2]
undefined
arr.find(element=>element==100);
100
arr.find(element=>element==1000);
undefined
arr.find(element=>element==1000)?'Found':'Not Found';
"Not Found"
arr.find(element=>element==100)?'Found':'Not Found';
"Found"
arr.findIndex(element=>element==100);
2
arr.findIndex(element=>element==1000);
-1
arr;
(7) [90, 2, 100, 33, 55, 1, 2]
arr.filter(element=>element==2);
(2) [2, 2]
arr.filter(element=>element==2).length;
2
arr.filter(element=>element>2).length;
4
arr.filter(element=>element>2);
(4) [90, 100, 33, 55]
arr.filter(element=>element>2).length;
4
arr;
(7) [90, 2, 100, 33, 55, 1, 2]
var sum = 0;
for(let i = 0;i<arr.length;i++){
sum+=arr[i];
}
console.log(sum);
VM1043:5 283
undefined
arr.reduce((acc,element)=>acc+element,acc=0);
283
const cube  = num=>num**3;

undefined
const square = num=>num*num;
undefined
const table = num=>5*num;
undefined
function loop(callBackFn){
for(let i = 1;i<=10; i++){
console.log(callBackFn(i));
}
}
undefined
loop(square);
VM1566:3 1
VM1566:3 4
VM1566:3 9
VM1566:3 16
VM1566:3 25
VM1566:3 36
VM1566:3 49
VM1566:3 64
VM1566:3 81
VM1566:3 100
undefined
loop(num=>num*num);
VM1566:3 1
VM1566:3 4
VM1566:3 9
VM1566:3 16
VM1566:3 25
VM1566:3 36
VM1566:3 49
VM1566:3 64
VM1566:3 81
VM1566:3 100
undefined
arr;
(7) [90, 2, 100, 33, 55, 1, 2]
arr.filter(ele=>ele>30);
(4) [90, 100, 33, 55]
arr.reduce((acc,element)=>{
if(element>30){
acc.push(element);
}
return acc;
},acc=[]);
(4) [90, 100, 33, 55]
arr;
(7) [90, 2, 100, 33, 55, 1, 2]
arr.sort((first, second)=>first-second);
(7) [1, 2, 2, 33, 55, 90, 100]
arr.sort((first, second)=>second-first);
(7) [100, 90, 55, 33, 2, 2, 1]
arr;
(7) [100, 90, 55, 33, 2, 2, 1]
var names = ["amit","ram","ajay","shyam","anil"];
undefined
"amit".localeCompare("anil");
-1
"anil".localeCompare("amit");
1
"amit".localeCompare("amit");
0
names.sort((first, second)=>first.localeCompare(second));
(5) ["ajay", "amit", "anil", "ram", "shyam"]
var price = [10000,9000,43434,46562];
undefined
var x =100000;
undefined
x.toLocaleString('hi-IN');
"1,00,000"
price.map(ele=>"Rs "+ ele.toLocaleString('hi-IN'));
(4) ["Rs 10,000", "Rs 9,000", "Rs 43,434", "Rs 46,562"]
price;
(4) [10000, 9000, 43434, 46562]0: 100001: 90002: 434343: 46562length: 4__proto__: Array(0)
price.map(ele=>ele + ele * 0.10);
(4) [11000, 9900, 47777.4, 51218.2]
var t = price.map(ele=>ele);
undefined
t;
(4) [10000, 9000, 43434, 46562]
var ff = [...price];
undefined
var bb = price.filter(ele=>true);
undefined
bb;
(4) [10000, 9000, 43434, 46562]
var x= 100;
undefined
var y = "100";
undefined
x==y;
true
x===y;
false
undefined==null
true
undefined === null;
false
